
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;

namespace GameConfig
{
public partial class Tables
{
    #region The Tables

    private Item m_Item;
    public Item Item 
    {
        get
        {
            if (m_Item == null)
            {
                m_Item = new Item(defaultLoader("item"));
                m_Item.ResolveRef(this);
            }
            return m_Item;
        }
        set
        {
            m_Item = value;
            m_Item.ResolveRef(this);
        }
    }
    private ChessPiece m_ChessPiece;
    public ChessPiece ChessPiece 
    {
        get
        {
            if (m_ChessPiece == null)
            {
                m_ChessPiece = new ChessPiece(defaultLoader("chesspiece"));
                m_ChessPiece.ResolveRef(this);
            }
            return m_ChessPiece;
        }
        set
        {
            m_ChessPiece = value;
            m_ChessPiece.ResolveRef(this);
        }
    }
    private ChessBoard m_ChessBoard;
    public ChessBoard ChessBoard 
    {
        get
        {
            if (m_ChessBoard == null)
            {
                m_ChessBoard = new ChessBoard(defaultLoader("chessboard"));
                m_ChessBoard.ResolveRef(this);
            }
            return m_ChessBoard;
        }
        set
        {
            m_ChessBoard = value;
            m_ChessBoard.ResolveRef(this);
        }
    }
    private GameLanguage m_GameLanguage;
    public GameLanguage GameLanguage 
    {
        get
        {
            if (m_GameLanguage == null)
            {
                m_GameLanguage = new GameLanguage(defaultLoader("gamelanguage"));
                m_GameLanguage.ResolveRef(this);
            }
            return m_GameLanguage;
        }
        set
        {
            m_GameLanguage = value;
            m_GameLanguage.ResolveRef(this);
        }
    }
    private Map m_Map;
    public Map Map 
    {
        get
        {
            if (m_Map == null)
            {
                m_Map = new Map(defaultLoader("map"));
                m_Map.ResolveRef(this);
            }
            return m_Map;
        }
        set
        {
            m_Map = value;
            m_Map.ResolveRef(this);
        }
    }
    private Building m_Building;
    public Building Building 
    {
        get
        {
            if (m_Building == null)
            {
                m_Building = new Building(defaultLoader("building"));
                m_Building.ResolveRef(this);
            }
            return m_Building;
        }
        set
        {
            m_Building = value;
            m_Building.ResolveRef(this);
        }
    }
    private ChessPerformance m_ChessPerformance;
    public ChessPerformance ChessPerformance 
    {
        get
        {
            if (m_ChessPerformance == null)
            {
                m_ChessPerformance = new ChessPerformance(defaultLoader("chessperformance"));
                m_ChessPerformance.ResolveRef(this);
            }
            return m_ChessPerformance;
        }
        set
        {
            m_ChessPerformance = value;
            m_ChessPerformance.ResolveRef(this);
        }
    }
    private Rule m_Rule;
    public Rule Rule 
    {
        get
        {
            if (m_Rule == null)
            {
                m_Rule = new Rule(defaultLoader("rule"));
                m_Rule.ResolveRef(this);
            }
            return m_Rule;
        }
        set
        {
            m_Rule = value;
            m_Rule.ResolveRef(this);
        }
    }
    private DiceNumber m_DiceNumber;
    public DiceNumber DiceNumber 
    {
        get
        {
            if (m_DiceNumber == null)
            {
                m_DiceNumber = new DiceNumber(defaultLoader("dicenumber"));
                m_DiceNumber.ResolveRef(this);
            }
            return m_DiceNumber;
        }
        set
        {
            m_DiceNumber = value;
            m_DiceNumber.ResolveRef(this);
        }
    }
    private SquareEvent m_SquareEvent;
    public SquareEvent SquareEvent 
    {
        get
        {
            if (m_SquareEvent == null)
            {
                m_SquareEvent = new SquareEvent(defaultLoader("squareevent"));
                m_SquareEvent.ResolveRef(this);
            }
            return m_SquareEvent;
        }
        set
        {
            m_SquareEvent = value;
            m_SquareEvent.ResolveRef(this);
        }
    }
    private PlayerLevel m_PlayerLevel;
    public PlayerLevel PlayerLevel 
    {
        get
        {
            if (m_PlayerLevel == null)
            {
                m_PlayerLevel = new PlayerLevel(defaultLoader("playerlevel"));
                m_PlayerLevel.ResolveRef(this);
            }
            return m_PlayerLevel;
        }
        set
        {
            m_PlayerLevel = value;
            m_PlayerLevel.ResolveRef(this);
        }
    }
    private Sound m_Sound;
    public Sound Sound 
    {
        get
        {
            if (m_Sound == null)
            {
                m_Sound = new Sound(defaultLoader("sound"));
                m_Sound.ResolveRef(this);
            }
            return m_Sound;
        }
        set
        {
            m_Sound = value;
            m_Sound.ResolveRef(this);
        }
    }
    private ChessBoardFine m_ChessBoardFine;
    public ChessBoardFine ChessBoardFine 
    {
        get
        {
            if (m_ChessBoardFine == null)
            {
                m_ChessBoardFine = new ChessBoardFine(defaultLoader("chessboardfine"));
                m_ChessBoardFine.ResolveRef(this);
            }
            return m_ChessBoardFine;
        }
        set
        {
            m_ChessBoardFine = value;
            m_ChessBoardFine.ResolveRef(this);
        }
    }
    private ChessBoardCompany m_ChessBoardCompany;
    public ChessBoardCompany ChessBoardCompany 
    {
        get
        {
            if (m_ChessBoardCompany == null)
            {
                m_ChessBoardCompany = new ChessBoardCompany(defaultLoader("chessboardcompany"));
                m_ChessBoardCompany.ResolveRef(this);
            }
            return m_ChessBoardCompany;
        }
        set
        {
            m_ChessBoardCompany = value;
            m_ChessBoardCompany.ResolveRef(this);
        }
    }
    private ChessBoardTurntable m_ChessBoardTurntable;
    public ChessBoardTurntable ChessBoardTurntable 
    {
        get
        {
            if (m_ChessBoardTurntable == null)
            {
                m_ChessBoardTurntable = new ChessBoardTurntable(defaultLoader("chessboardturntable"));
                m_ChessBoardTurntable.ResolveRef(this);
            }
            return m_ChessBoardTurntable;
        }
        set
        {
            m_ChessBoardTurntable = value;
            m_ChessBoardTurntable.ResolveRef(this);
        }
    }
    private GMCommand m_GMCommand;
    public GMCommand GMCommand 
    {
        get
        {
            if (m_GMCommand == null)
            {
                m_GMCommand = new GMCommand(defaultLoader("gmcommand"));
                m_GMCommand.ResolveRef(this);
            }
            return m_GMCommand;
        }
        set
        {
            m_GMCommand = value;
            m_GMCommand.ResolveRef(this);
        }
    }
    private ChessBoardPosition m_ChessBoardPosition;
    public ChessBoardPosition ChessBoardPosition 
    {
        get
        {
            if (m_ChessBoardPosition == null)
            {
                m_ChessBoardPosition = new ChessBoardPosition(defaultLoader("chessboardposition"));
                m_ChessBoardPosition.ResolveRef(this);
            }
            return m_ChessBoardPosition;
        }
        set
        {
            m_ChessBoardPosition = value;
            m_ChessBoardPosition.ResolveRef(this);
        }
    }
    private PrisonGlobal m_PrisonGlobal;
    public PrisonGlobal PrisonGlobal 
    {
        get
        {
            if (m_PrisonGlobal == null)
            {
                m_PrisonGlobal = new PrisonGlobal(defaultLoader("prisonglobal"));
                m_PrisonGlobal.ResolveRef(this);
            }
            return m_PrisonGlobal;
        }
        set
        {
            m_PrisonGlobal = value;
            m_PrisonGlobal.ResolveRef(this);
        }
    }
    private StationGlobal m_StationGlobal;
    public StationGlobal StationGlobal 
    {
        get
        {
            if (m_StationGlobal == null)
            {
                m_StationGlobal = new StationGlobal(defaultLoader("stationglobal"));
                m_StationGlobal.ResolveRef(this);
            }
            return m_StationGlobal;
        }
        set
        {
            m_StationGlobal = value;
            m_StationGlobal.ResolveRef(this);
        }
    }
    private Robot m_Robot;
    public Robot Robot 
    {
        get
        {
            if (m_Robot == null)
            {
                m_Robot = new Robot(defaultLoader("robot"));
                m_Robot.ResolveRef(this);
            }
            return m_Robot;
        }
        set
        {
            m_Robot = value;
            m_Robot.ResolveRef(this);
        }
    }
    private ScreenShake m_ScreenShake;
    public ScreenShake ScreenShake 
    {
        get
        {
            if (m_ScreenShake == null)
            {
                m_ScreenShake = new ScreenShake(defaultLoader("screenshake"));
                m_ScreenShake.ResolveRef(this);
            }
            return m_ScreenShake;
        }
        set
        {
            m_ScreenShake = value;
            m_ScreenShake.ResolveRef(this);
        }
    }
    private BuildingGlobal m_BuildingGlobal;
    public BuildingGlobal BuildingGlobal 
    {
        get
        {
            if (m_BuildingGlobal == null)
            {
                m_BuildingGlobal = new BuildingGlobal(defaultLoader("buildingglobal"));
                m_BuildingGlobal.ResolveRef(this);
            }
            return m_BuildingGlobal;
        }
        set
        {
            m_BuildingGlobal = value;
            m_BuildingGlobal.ResolveRef(this);
        }
    }
    private ChessModel m_ChessModel;
    public ChessModel ChessModel 
    {
        get
        {
            if (m_ChessModel == null)
            {
                m_ChessModel = new ChessModel(defaultLoader("chessmodel"));
                m_ChessModel.ResolveRef(this);
            }
            return m_ChessModel;
        }
        set
        {
            m_ChessModel = value;
            m_ChessModel.ResolveRef(this);
        }
    }
    private FriendGlobal m_FriendGlobal;
    public FriendGlobal FriendGlobal 
    {
        get
        {
            if (m_FriendGlobal == null)
            {
                m_FriendGlobal = new FriendGlobal(defaultLoader("friendglobal"));
                m_FriendGlobal.ResolveRef(this);
            }
            return m_FriendGlobal;
        }
        set
        {
            m_FriendGlobal = value;
            m_FriendGlobal.ResolveRef(this);
        }
    }
    private FunctionUnlock m_FunctionUnlock;
    public FunctionUnlock FunctionUnlock 
    {
        get
        {
            if (m_FunctionUnlock == null)
            {
                m_FunctionUnlock = new FunctionUnlock(defaultLoader("functionunlock"));
                m_FunctionUnlock.ResolveRef(this);
            }
            return m_FunctionUnlock;
        }
        set
        {
            m_FunctionUnlock = value;
            m_FunctionUnlock.ResolveRef(this);
        }
    }
    private DailyTask m_DailyTask;
    public DailyTask DailyTask 
    {
        get
        {
            if (m_DailyTask == null)
            {
                m_DailyTask = new DailyTask(defaultLoader("dailytask"));
                m_DailyTask.ResolveRef(this);
            }
            return m_DailyTask;
        }
        set
        {
            m_DailyTask = value;
            m_DailyTask.ResolveRef(this);
        }
    }
    private DailyPointRewards m_DailyPointRewards;
    public DailyPointRewards DailyPointRewards 
    {
        get
        {
            if (m_DailyPointRewards == null)
            {
                m_DailyPointRewards = new DailyPointRewards(defaultLoader("dailypointrewards"));
                m_DailyPointRewards.ResolveRef(this);
            }
            return m_DailyPointRewards;
        }
        set
        {
            m_DailyPointRewards = value;
            m_DailyPointRewards.ResolveRef(this);
        }
    }
    private SystemList m_SystemList;
    public SystemList SystemList 
    {
        get
        {
            if (m_SystemList == null)
            {
                m_SystemList = new SystemList(defaultLoader("systemlist"));
                m_SystemList.ResolveRef(this);
            }
            return m_SystemList;
        }
        set
        {
            m_SystemList = value;
            m_SystemList.ResolveRef(this);
        }
    }
    private AlbumGlobal m_AlbumGlobal;
    public AlbumGlobal AlbumGlobal 
    {
        get
        {
            if (m_AlbumGlobal == null)
            {
                m_AlbumGlobal = new AlbumGlobal(defaultLoader("albumglobal"));
                m_AlbumGlobal.ResolveRef(this);
            }
            return m_AlbumGlobal;
        }
        set
        {
            m_AlbumGlobal = value;
            m_AlbumGlobal.ResolveRef(this);
        }
    }
    private Album m_Album;
    public Album Album 
    {
        get
        {
            if (m_Album == null)
            {
                m_Album = new Album(defaultLoader("album"));
                m_Album.ResolveRef(this);
            }
            return m_Album;
        }
        set
        {
            m_Album = value;
            m_Album.ResolveRef(this);
        }
    }
    private AlbumSet m_AlbumSet;
    public AlbumSet AlbumSet 
    {
        get
        {
            if (m_AlbumSet == null)
            {
                m_AlbumSet = new AlbumSet(defaultLoader("albumset"));
                m_AlbumSet.ResolveRef(this);
            }
            return m_AlbumSet;
        }
        set
        {
            m_AlbumSet = value;
            m_AlbumSet.ResolveRef(this);
        }
    }
    private AlbumSticker m_AlbumSticker;
    public AlbumSticker AlbumSticker 
    {
        get
        {
            if (m_AlbumSticker == null)
            {
                m_AlbumSticker = new AlbumSticker(defaultLoader("albumsticker"));
                m_AlbumSticker.ResolveRef(this);
            }
            return m_AlbumSticker;
        }
        set
        {
            m_AlbumSticker = value;
            m_AlbumSticker.ResolveRef(this);
        }
    }
    private ItemPack m_ItemPack;
    public ItemPack ItemPack 
    {
        get
        {
            if (m_ItemPack == null)
            {
                m_ItemPack = new ItemPack(defaultLoader("itempack"));
                m_ItemPack.ResolveRef(this);
            }
            return m_ItemPack;
        }
        set
        {
            m_ItemPack = value;
            m_ItemPack.ResolveRef(this);
        }
    }
    private StickerPack m_StickerPack;
    public StickerPack StickerPack 
    {
        get
        {
            if (m_StickerPack == null)
            {
                m_StickerPack = new StickerPack(defaultLoader("stickerpack"));
                m_StickerPack.ResolveRef(this);
            }
            return m_StickerPack;
        }
        set
        {
            m_StickerPack = value;
            m_StickerPack.ResolveRef(this);
        }
    }
    private LampGlobal m_LampGlobal;
    public LampGlobal LampGlobal 
    {
        get
        {
            if (m_LampGlobal == null)
            {
                m_LampGlobal = new LampGlobal(defaultLoader("lampglobal"));
                m_LampGlobal.ResolveRef(this);
            }
            return m_LampGlobal;
        }
        set
        {
            m_LampGlobal = value;
            m_LampGlobal.ResolveRef(this);
        }
    }
    private Walker m_Walker;
    public Walker Walker 
    {
        get
        {
            if (m_Walker == null)
            {
                m_Walker = new Walker(defaultLoader("walker"));
                m_Walker.ResolveRef(this);
            }
            return m_Walker;
        }
        set
        {
            m_Walker = value;
            m_Walker.ResolveRef(this);
        }
    }
    private WalkerPath m_WalkerPath;
    public WalkerPath WalkerPath 
    {
        get
        {
            if (m_WalkerPath == null)
            {
                m_WalkerPath = new WalkerPath(defaultLoader("walkerpath"));
                m_WalkerPath.ResolveRef(this);
            }
            return m_WalkerPath;
        }
        set
        {
            m_WalkerPath = value;
            m_WalkerPath.ResolveRef(this);
        }
    }
    private MiniGame m_MiniGame;
    public MiniGame MiniGame 
    {
        get
        {
            if (m_MiniGame == null)
            {
                m_MiniGame = new MiniGame(defaultLoader("minigame"));
                m_MiniGame.ResolveRef(this);
            }
            return m_MiniGame;
        }
        set
        {
            m_MiniGame = value;
            m_MiniGame.ResolveRef(this);
        }
    }
    private MiniGameShoot m_MiniGameShoot;
    public MiniGameShoot MiniGameShoot 
    {
        get
        {
            if (m_MiniGameShoot == null)
            {
                m_MiniGameShoot = new MiniGameShoot(defaultLoader("minigameshoot"));
                m_MiniGameShoot.ResolveRef(this);
            }
            return m_MiniGameShoot;
        }
        set
        {
            m_MiniGameShoot = value;
            m_MiniGameShoot.ResolveRef(this);
        }
    }
    private MiniGameCash m_MiniGameCash;
    public MiniGameCash MiniGameCash 
    {
        get
        {
            if (m_MiniGameCash == null)
            {
                m_MiniGameCash = new MiniGameCash(defaultLoader("minigamecash"));
                m_MiniGameCash.ResolveRef(this);
            }
            return m_MiniGameCash;
        }
        set
        {
            m_MiniGameCash = value;
            m_MiniGameCash.ResolveRef(this);
        }
    }
    private MiniGameCashUnit m_MiniGameCashUnit;
    public MiniGameCashUnit MiniGameCashUnit 
    {
        get
        {
            if (m_MiniGameCashUnit == null)
            {
                m_MiniGameCashUnit = new MiniGameCashUnit(defaultLoader("minigamecashunit"));
                m_MiniGameCashUnit.ResolveRef(this);
            }
            return m_MiniGameCashUnit;
        }
        set
        {
            m_MiniGameCashUnit = value;
            m_MiniGameCashUnit.ResolveRef(this);
        }
    }
    private ActivityControl m_ActivityControl;
    public ActivityControl ActivityControl 
    {
        get
        {
            if (m_ActivityControl == null)
            {
                m_ActivityControl = new ActivityControl(defaultLoader("activitycontrol"));
                m_ActivityControl.ResolveRef(this);
            }
            return m_ActivityControl;
        }
        set
        {
            m_ActivityControl = value;
            m_ActivityControl.ResolveRef(this);
        }
    }
    private CreditsActivity m_CreditsActivity;
    public CreditsActivity CreditsActivity 
    {
        get
        {
            if (m_CreditsActivity == null)
            {
                m_CreditsActivity = new CreditsActivity(defaultLoader("creditsactivity"));
                m_CreditsActivity.ResolveRef(this);
            }
            return m_CreditsActivity;
        }
        set
        {
            m_CreditsActivity = value;
            m_CreditsActivity.ResolveRef(this);
        }
    }
    private ConditionsRewards m_ConditionsRewards;
    public ConditionsRewards ConditionsRewards 
    {
        get
        {
            if (m_ConditionsRewards == null)
            {
                m_ConditionsRewards = new ConditionsRewards(defaultLoader("conditionsrewards"));
                m_ConditionsRewards.ResolveRef(this);
            }
            return m_ConditionsRewards;
        }
        set
        {
            m_ConditionsRewards = value;
            m_ConditionsRewards.ResolveRef(this);
        }
    }
    private ShowRoom m_ShowRoom;
    public ShowRoom ShowRoom 
    {
        get
        {
            if (m_ShowRoom == null)
            {
                m_ShowRoom = new ShowRoom(defaultLoader("showroom"));
                m_ShowRoom.ResolveRef(this);
            }
            return m_ShowRoom;
        }
        set
        {
            m_ShowRoom = value;
            m_ShowRoom.ResolveRef(this);
        }
    }
    private EmojiSlot m_EmojiSlot;
    public EmojiSlot EmojiSlot 
    {
        get
        {
            if (m_EmojiSlot == null)
            {
                m_EmojiSlot = new EmojiSlot(defaultLoader("emojislot"));
                m_EmojiSlot.ResolveRef(this);
            }
            return m_EmojiSlot;
        }
        set
        {
            m_EmojiSlot = value;
            m_EmojiSlot.ResolveRef(this);
        }
    }
    private EmojiSlotImg m_EmojiSlotImg;
    public EmojiSlotImg EmojiSlotImg 
    {
        get
        {
            if (m_EmojiSlotImg == null)
            {
                m_EmojiSlotImg = new EmojiSlotImg(defaultLoader("emojislotimg"));
                m_EmojiSlotImg.ResolveRef(this);
            }
            return m_EmojiSlotImg;
        }
        set
        {
            m_EmojiSlotImg = value;
            m_EmojiSlotImg.ResolveRef(this);
        }
    }
    private RandomName m_RandomName;
    public RandomName RandomName 
    {
        get
        {
            if (m_RandomName == null)
            {
                m_RandomName = new RandomName(defaultLoader("randomname"));
                m_RandomName.ResolveRef(this);
            }
            return m_RandomName;
        }
        set
        {
            m_RandomName = value;
            m_RandomName.ResolveRef(this);
        }
    }
    private Head m_Head;
    public Head Head 
    {
        get
        {
            if (m_Head == null)
            {
                m_Head = new Head(defaultLoader("head"));
                m_Head.ResolveRef(this);
            }
            return m_Head;
        }
        set
        {
            m_Head = value;
            m_Head.ResolveRef(this);
        }
    }
    private EventReport m_EventReport;
    public EventReport EventReport 
    {
        get
        {
            if (m_EventReport == null)
            {
                m_EventReport = new EventReport(defaultLoader("eventreport"));
                m_EventReport.ResolveRef(this);
            }
            return m_EventReport;
        }
        set
        {
            m_EventReport = value;
            m_EventReport.ResolveRef(this);
        }
    }
    private EventReportGlobal m_EventReportGlobal;
    public EventReportGlobal EventReportGlobal 
    {
        get
        {
            if (m_EventReportGlobal == null)
            {
                m_EventReportGlobal = new EventReportGlobal(defaultLoader("eventreportglobal"));
                m_EventReportGlobal.ResolveRef(this);
            }
            return m_EventReportGlobal;
        }
        set
        {
            m_EventReportGlobal = value;
            m_EventReportGlobal.ResolveRef(this);
        }
    }
    private AnotherDimensionGlobal m_AnotherDimensionGlobal;
    public AnotherDimensionGlobal AnotherDimensionGlobal 
    {
        get
        {
            if (m_AnotherDimensionGlobal == null)
            {
                m_AnotherDimensionGlobal = new AnotherDimensionGlobal(defaultLoader("anotherdimensionglobal"));
                m_AnotherDimensionGlobal.ResolveRef(this);
            }
            return m_AnotherDimensionGlobal;
        }
        set
        {
            m_AnotherDimensionGlobal = value;
            m_AnotherDimensionGlobal.ResolveRef(this);
        }
    }
    private ChessBoardTheme m_ChessBoardTheme;
    public ChessBoardTheme ChessBoardTheme 
    {
        get
        {
            if (m_ChessBoardTheme == null)
            {
                m_ChessBoardTheme = new ChessBoardTheme(defaultLoader("chessboardtheme"));
                m_ChessBoardTheme.ResolveRef(this);
            }
            return m_ChessBoardTheme;
        }
        set
        {
            m_ChessBoardTheme = value;
            m_ChessBoardTheme.ResolveRef(this);
        }
    }
    private Shop m_Shop;
    public Shop Shop 
    {
        get
        {
            if (m_Shop == null)
            {
                m_Shop = new Shop(defaultLoader("shop"));
                m_Shop.ResolveRef(this);
            }
            return m_Shop;
        }
        set
        {
            m_Shop = value;
            m_Shop.ResolveRef(this);
        }
    }
    private Attribute m_Attribute;
    public Attribute Attribute 
    {
        get
        {
            if (m_Attribute == null)
            {
                m_Attribute = new Attribute(defaultLoader("attribute"));
                m_Attribute.ResolveRef(this);
            }
            return m_Attribute;
        }
        set
        {
            m_Attribute = value;
            m_Attribute.ResolveRef(this);
        }
    }
    private TreasureChest m_TreasureChest;
    public TreasureChest TreasureChest 
    {
        get
        {
            if (m_TreasureChest == null)
            {
                m_TreasureChest = new TreasureChest(defaultLoader("treasurechest"));
                m_TreasureChest.ResolveRef(this);
            }
            return m_TreasureChest;
        }
        set
        {
            m_TreasureChest = value;
            m_TreasureChest.ResolveRef(this);
        }
    }
    private MapObjectRadius m_MapObjectRadius;
    public MapObjectRadius MapObjectRadius 
    {
        get
        {
            if (m_MapObjectRadius == null)
            {
                m_MapObjectRadius = new MapObjectRadius(defaultLoader("mapobjectradius"));
                m_MapObjectRadius.ResolveRef(this);
            }
            return m_MapObjectRadius;
        }
        set
        {
            m_MapObjectRadius = value;
            m_MapObjectRadius.ResolveRef(this);
        }
    }
    private Sign m_Sign;
    public Sign Sign 
    {
        get
        {
            if (m_Sign == null)
            {
                m_Sign = new Sign(defaultLoader("sign"));
                m_Sign.ResolveRef(this);
            }
            return m_Sign;
        }
        set
        {
            m_Sign = value;
            m_Sign.ResolveRef(this);
        }
    }
    private SignCumulate m_SignCumulate;
    public SignCumulate SignCumulate 
    {
        get
        {
            if (m_SignCumulate == null)
            {
                m_SignCumulate = new SignCumulate(defaultLoader("signcumulate"));
                m_SignCumulate.ResolveRef(this);
            }
            return m_SignCumulate;
        }
        set
        {
            m_SignCumulate = value;
            m_SignCumulate.ResolveRef(this);
        }
    }
    private EventActivity m_EventActivity;
    public EventActivity EventActivity 
    {
        get
        {
            if (m_EventActivity == null)
            {
                m_EventActivity = new EventActivity(defaultLoader("eventactivity"));
                m_EventActivity.ResolveRef(this);
            }
            return m_EventActivity;
        }
        set
        {
            m_EventActivity = value;
            m_EventActivity.ResolveRef(this);
        }
    }
    private RankActivity m_RankActivity;
    public RankActivity RankActivity 
    {
        get
        {
            if (m_RankActivity == null)
            {
                m_RankActivity = new RankActivity(defaultLoader("rankactivity"));
                m_RankActivity.ResolveRef(this);
            }
            return m_RankActivity;
        }
        set
        {
            m_RankActivity = value;
            m_RankActivity.ResolveRef(this);
        }
    }
    private RankRewards m_RankRewards;
    public RankRewards RankRewards 
    {
        get
        {
            if (m_RankRewards == null)
            {
                m_RankRewards = new RankRewards(defaultLoader("rankrewards"));
                m_RankRewards.ResolveRef(this);
            }
            return m_RankRewards;
        }
        set
        {
            m_RankRewards = value;
            m_RankRewards.ResolveRef(this);
        }
    }
    private SceneTasks m_SceneTasks;
    public SceneTasks SceneTasks 
    {
        get
        {
            if (m_SceneTasks == null)
            {
                m_SceneTasks = new SceneTasks(defaultLoader("scenetasks"));
                m_SceneTasks.ResolveRef(this);
            }
            return m_SceneTasks;
        }
        set
        {
            m_SceneTasks = value;
            m_SceneTasks.ResolveRef(this);
        }
    }
    private TimePoliceGlobal m_TimePoliceGlobal;
    public TimePoliceGlobal TimePoliceGlobal 
    {
        get
        {
            if (m_TimePoliceGlobal == null)
            {
                m_TimePoliceGlobal = new TimePoliceGlobal(defaultLoader("timepoliceglobal"));
                m_TimePoliceGlobal.ResolveRef(this);
            }
            return m_TimePoliceGlobal;
        }
        set
        {
            m_TimePoliceGlobal = value;
            m_TimePoliceGlobal.ResolveRef(this);
        }
    }
    private GoldCoinPerformance m_GoldCoinPerformance;
    public GoldCoinPerformance GoldCoinPerformance 
    {
        get
        {
            if (m_GoldCoinPerformance == null)
            {
                m_GoldCoinPerformance = new GoldCoinPerformance(defaultLoader("goldcoinperformance"));
                m_GoldCoinPerformance.ResolveRef(this);
            }
            return m_GoldCoinPerformance;
        }
        set
        {
            m_GoldCoinPerformance = value;
            m_GoldCoinPerformance.ResolveRef(this);
        }
    }
    private TextInsertIcon m_TextInsertIcon;
    public TextInsertIcon TextInsertIcon 
    {
        get
        {
            if (m_TextInsertIcon == null)
            {
                m_TextInsertIcon = new TextInsertIcon(defaultLoader("textinserticon"));
                m_TextInsertIcon.ResolveRef(this);
            }
            return m_TextInsertIcon;
        }
        set
        {
            m_TextInsertIcon = value;
            m_TextInsertIcon.ResolveRef(this);
        }
    }
    private Ranking m_Ranking;
    public Ranking Ranking 
    {
        get
        {
            if (m_Ranking == null)
            {
                m_Ranking = new Ranking(defaultLoader("ranking"));
                m_Ranking.ResolveRef(this);
            }
            return m_Ranking;
        }
        set
        {
            m_Ranking = value;
            m_Ranking.ResolveRef(this);
        }
    }
    private GuessingFistsGlobal m_GuessingFistsGlobal;
    public GuessingFistsGlobal GuessingFistsGlobal 
    {
        get
        {
            if (m_GuessingFistsGlobal == null)
            {
                m_GuessingFistsGlobal = new GuessingFistsGlobal(defaultLoader("guessingfistsglobal"));
                m_GuessingFistsGlobal.ResolveRef(this);
            }
            return m_GuessingFistsGlobal;
        }
        set
        {
            m_GuessingFistsGlobal = value;
            m_GuessingFistsGlobal.ResolveRef(this);
        }
    }
    private RedDot m_RedDot;
    public RedDot RedDot 
    {
        get
        {
            if (m_RedDot == null)
            {
                m_RedDot = new RedDot(defaultLoader("reddot"));
                m_RedDot.ResolveRef(this);
            }
            return m_RedDot;
        }
        set
        {
            m_RedDot = value;
            m_RedDot.ResolveRef(this);
        }
    }
    private FloatingItem m_FloatingItem;
    public FloatingItem FloatingItem 
    {
        get
        {
            if (m_FloatingItem == null)
            {
                m_FloatingItem = new FloatingItem(defaultLoader("floatingitem"));
                m_FloatingItem.ResolveRef(this);
            }
            return m_FloatingItem;
        }
        set
        {
            m_FloatingItem = value;
            m_FloatingItem.ResolveRef(this);
        }
    }
    private WeeklyActivity m_WeeklyActivity;
    public WeeklyActivity WeeklyActivity 
    {
        get
        {
            if (m_WeeklyActivity == null)
            {
                m_WeeklyActivity = new WeeklyActivity(defaultLoader("weeklyactivity"));
                m_WeeklyActivity.ResolveRef(this);
            }
            return m_WeeklyActivity;
        }
        set
        {
            m_WeeklyActivity = value;
            m_WeeklyActivity.ResolveRef(this);
        }
    }
    private WeeklyActivityStage m_WeeklyActivityStage;
    public WeeklyActivityStage WeeklyActivityStage 
    {
        get
        {
            if (m_WeeklyActivityStage == null)
            {
                m_WeeklyActivityStage = new WeeklyActivityStage(defaultLoader("weeklyactivitystage"));
                m_WeeklyActivityStage.ResolveRef(this);
            }
            return m_WeeklyActivityStage;
        }
        set
        {
            m_WeeklyActivityStage = value;
            m_WeeklyActivityStage.ResolveRef(this);
        }
    }
    private WeeklyActivityTreasures m_WeeklyActivityTreasures;
    public WeeklyActivityTreasures WeeklyActivityTreasures 
    {
        get
        {
            if (m_WeeklyActivityTreasures == null)
            {
                m_WeeklyActivityTreasures = new WeeklyActivityTreasures(defaultLoader("weeklyactivitytreasures"));
                m_WeeklyActivityTreasures.ResolveRef(this);
            }
            return m_WeeklyActivityTreasures;
        }
        set
        {
            m_WeeklyActivityTreasures = value;
            m_WeeklyActivityTreasures.ResolveRef(this);
        }
    }
    private WeeklyActivityParameter m_WeeklyActivityParameter;
    public WeeklyActivityParameter WeeklyActivityParameter 
    {
        get
        {
            if (m_WeeklyActivityParameter == null)
            {
                m_WeeklyActivityParameter = new WeeklyActivityParameter(defaultLoader("weeklyactivityparameter"));
                m_WeeklyActivityParameter.ResolveRef(this);
            }
            return m_WeeklyActivityParameter;
        }
        set
        {
            m_WeeklyActivityParameter = value;
            m_WeeklyActivityParameter.ResolveRef(this);
        }
    }
    private MobileShake m_MobileShake;
    public MobileShake MobileShake 
    {
        get
        {
            if (m_MobileShake == null)
            {
                m_MobileShake = new MobileShake(defaultLoader("mobileshake"));
                m_MobileShake.ResolveRef(this);
            }
            return m_MobileShake;
        }
        set
        {
            m_MobileShake = value;
            m_MobileShake.ResolveRef(this);
        }
    }
    private StateMachineGlobal m_StateMachineGlobal;
    public StateMachineGlobal StateMachineGlobal 
    {
        get
        {
            if (m_StateMachineGlobal == null)
            {
                m_StateMachineGlobal = new StateMachineGlobal(defaultLoader("statemachineglobal"));
                m_StateMachineGlobal.ResolveRef(this);
            }
            return m_StateMachineGlobal;
        }
        set
        {
            m_StateMachineGlobal = value;
            m_StateMachineGlobal.ResolveRef(this);
        }
    }
    private DiceModel m_DiceModel;
    public DiceModel DiceModel 
    {
        get
        {
            if (m_DiceModel == null)
            {
                m_DiceModel = new DiceModel(defaultLoader("dicemodel"));
                m_DiceModel.ResolveRef(this);
            }
            return m_DiceModel;
        }
        set
        {
            m_DiceModel = value;
            m_DiceModel.ResolveRef(this);
        }
    }
    private LanguageSetting m_LanguageSetting;
    public LanguageSetting LanguageSetting 
    {
        get
        {
            if (m_LanguageSetting == null)
            {
                m_LanguageSetting = new LanguageSetting(defaultLoader("languagesetting"));
                m_LanguageSetting.ResolveRef(this);
            }
            return m_LanguageSetting;
        }
        set
        {
            m_LanguageSetting = value;
            m_LanguageSetting.ResolveRef(this);
        }
    }
    private Setting m_Setting;
    public Setting Setting 
    {
        get
        {
            if (m_Setting == null)
            {
                m_Setting = new Setting(defaultLoader("setting"));
                m_Setting.ResolveRef(this);
            }
            return m_Setting;
        }
        set
        {
            m_Setting = value;
            m_Setting.ResolveRef(this);
        }
    }
    private ChessAction m_ChessAction;
    public ChessAction ChessAction 
    {
        get
        {
            if (m_ChessAction == null)
            {
                m_ChessAction = new ChessAction(defaultLoader("chessaction"));
                m_ChessAction.ResolveRef(this);
            }
            return m_ChessAction;
        }
        set
        {
            m_ChessAction = value;
            m_ChessAction.ResolveRef(this);
        }
    }
    private GiftPack m_GiftPack;
    public GiftPack GiftPack 
    {
        get
        {
            if (m_GiftPack == null)
            {
                m_GiftPack = new GiftPack(defaultLoader("giftpack"));
                m_GiftPack.ResolveRef(this);
            }
            return m_GiftPack;
        }
        set
        {
            m_GiftPack = value;
            m_GiftPack.ResolveRef(this);
        }
    }
    private GiftPackShow m_GiftPackShow;
    public GiftPackShow GiftPackShow 
    {
        get
        {
            if (m_GiftPackShow == null)
            {
                m_GiftPackShow = new GiftPackShow(defaultLoader("giftpackshow"));
                m_GiftPackShow.ResolveRef(this);
            }
            return m_GiftPackShow;
        }
        set
        {
            m_GiftPackShow = value;
            m_GiftPackShow.ResolveRef(this);
        }
    }
    private GiftPackGroup m_GiftPackGroup;
    public GiftPackGroup GiftPackGroup 
    {
        get
        {
            if (m_GiftPackGroup == null)
            {
                m_GiftPackGroup = new GiftPackGroup(defaultLoader("giftpackgroup"));
                m_GiftPackGroup.ResolveRef(this);
            }
            return m_GiftPackGroup;
        }
        set
        {
            m_GiftPackGroup = value;
            m_GiftPackGroup.ResolveRef(this);
        }
    }
    private MallItem m_MallItem;
    public MallItem MallItem 
    {
        get
        {
            if (m_MallItem == null)
            {
                m_MallItem = new MallItem(defaultLoader("mallitem"));
                m_MallItem.ResolveRef(this);
            }
            return m_MallItem;
        }
        set
        {
            m_MallItem = value;
            m_MallItem.ResolveRef(this);
        }
    }
    private BlockedWords m_BlockedWords;
    public BlockedWords BlockedWords 
    {
        get
        {
            if (m_BlockedWords == null)
            {
                m_BlockedWords = new BlockedWords(defaultLoader("blockedwords"));
                m_BlockedWords.ResolveRef(this);
            }
            return m_BlockedWords;
        }
        set
        {
            m_BlockedWords = value;
            m_BlockedWords.ResolveRef(this);
        }
    }
    private LottoGlobal m_LottoGlobal;
    public LottoGlobal LottoGlobal 
    {
        get
        {
            if (m_LottoGlobal == null)
            {
                m_LottoGlobal = new LottoGlobal(defaultLoader("lottoglobal"));
                m_LottoGlobal.ResolveRef(this);
            }
            return m_LottoGlobal;
        }
        set
        {
            m_LottoGlobal = value;
            m_LottoGlobal.ResolveRef(this);
        }
    }
    private Guide m_Guide;
    public Guide Guide 
    {
        get
        {
            if (m_Guide == null)
            {
                m_Guide = new Guide(defaultLoader("guide"));
                m_Guide.ResolveRef(this);
            }
            return m_Guide;
        }
        set
        {
            m_Guide = value;
            m_Guide.ResolveRef(this);
        }
    }
    private MiniGameSelect m_MiniGameSelect;
    public MiniGameSelect MiniGameSelect 
    {
        get
        {
            if (m_MiniGameSelect == null)
            {
                m_MiniGameSelect = new MiniGameSelect(defaultLoader("minigameselect"));
                m_MiniGameSelect.ResolveRef(this);
            }
            return m_MiniGameSelect;
        }
        set
        {
            m_MiniGameSelect = value;
            m_MiniGameSelect.ResolveRef(this);
        }
    }

    #endregion

    System.Func<string, ByteBuf> defaultLoader;

    public Tables(System.Func<string, ByteBuf> loader)
    {
        SetDefaultLoader(loader);
        Init();
    }
    
    public void SetDefaultLoader(System.Func<string, ByteBuf> loader)
    {
        defaultLoader = null;
        defaultLoader = loader;
    }

    //public partial void Init();

    public void Init(){}
}

}
